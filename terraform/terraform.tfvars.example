# DigitalOcean API Token
digitalocean_token = "dop_v1_your_personal_access_token_here"

# DigitalOcean Spaces Credentials (required for object storage / searchable snapshots)
# Generate these at: https://cloud.digitalocean.com/account/api/spaces
spaces_access_id  = "your_spaces_access_key_id_here"
spaces_secret_key = "your_spaces_secret_key_here"

# DigitalOcean Configuration
region = "nyc3"

# Cluster Configuration
cluster_name = "elasticsearch"
environment  = "poc"

# SSH Configuration - REQUIRED
# ssh_key_name must match an existing SSH key name in your DigitalOcean account
ssh_key_name = "your-ssh-key-name"

# SSH Private Key Path - REQUIRED for air-gapped package upload
# This is the local path to your SSH private key file
# Terraform uses this to upload packages to droplets
ssh_private_key_path = "~/.ssh/id_rsa"

# Node Configuration
# DEMO/POC (Cost-optimized - ~$2/day):
hot_node_count   = 2              # Minimum for master quorum
hot_node_size    = "s-2vcpu-2gb"  # 2GB RAM (~$18/month each)
cold_node_size   = "s-1vcpu-2gb"  # 2GB RAM (~$12/month)
frozen_node_size = "s-1vcpu-2gb"  # 2GB RAM (~$12/month)

# PRODUCTION (Original - ~$5.60/day):
# hot_node_count   = 3
# hot_node_size    = "s-4vcpu-8gb"  # 8GB RAM (~$48/month each)
# cold_node_size   = "s-1vcpu-2gb"  # 2GB RAM (~$12/month)
# frozen_node_size = "s-1vcpu-2gb"  # 2GB RAM (~$12/month)

# Elasticsearch Version
# Using 9.1.5 - latest stable version as of October 2025
elasticsearch_version = "9.1.5"

# Deployment Mode
# "airgapped"        - Self-managed: Pre-download packages and upload via Terraform (no internet required on droplets)
# "networked"        - Self-managed: Install packages directly from internet repositories (droplets need internet access)
# "cloud_hosted"     - Elastic Cloud hosted deployment
# "cloud_serverless" - Elastic Cloud serverless deployment
deployment_mode = "airgapped"

# Security Configuration
# WARNING: Default opens access to the entire internet.
# IMPORTANT: Restrict to specific IP addresses or CIDR blocks in production

# API Access - who can access Elasticsearch through the load balancer
allowed_ips = ["0.0.0.0/0"]  # CHANGE THIS IN PRODUCTION

# SSH Access - more restrictive, only for administrators
# Leave empty to use same as allowed_ips, or specify separate IPs
allowed_ssh_ips = []

# Example for restricted access:
# allowed_ips = [
#   "203.0.113.0/24",    # Office network for API access
#   "198.51.100.15/32"   # Specific monitoring server
# ]
# allowed_ssh_ips = [
#   "198.51.100.15/32",  # Admin workstation only
#   "203.0.113.10/32"    # Jump server
# ]

# SSH Key for esadmin user (optional)
# If not provided, uses the main SSH key
esadmin_ssh_public_key = ""

# Spaces Configuration
# Leave empty to auto-generate name, or specify your own
spaces_bucket_name = ""

# Monitoring
enable_monitoring = true

# Node Sizes for Kibana, EPR, and Artifact Registry
# The full Elastic stack includes these services by default
# DEMO cost (with defaults below): ~$1.20/day
# PRODUCTION cost (larger sizes): ~$1.60/day
# kibana_node_size            = "s-1vcpu-2gb"  # Uncomment to override default
# epr_node_size               = "s-1vcpu-2gb"  # Uncomment to override default
# artifact_registry_node_size = "s-1vcpu-2gb"  # Uncomment to override default

# Data Source Configuration - Cribl Stream
# Optional VMs for sending data to Elasticsearch via Cribl Stream
# Set cribl_stream_count > 0 to enable (0 = disabled)

cribl_stream_count = 0  # Number of Cribl Stream VMs (0 to disable, 1-10 to enable)

# Uncomment to enable Cribl Stream:
# cribl_stream_count     = 1              # Create 1 Cribl Stream instance
# cribl_stream_node_size = "s-2vcpu-4gb"  # Recommended: s-2vcpu-4gb (~$24/month)
# cribl_stream_version   = "4.8.2"        # Cribl Stream version
# cribl_leader_mode      = "standalone"   # "standalone" or "worker"

# Worker mode configuration (only if cribl_leader_mode = "worker"):
# cribl_leader_url   = "https://your-leader-url:4200"
# cribl_auth_token   = "your-worker-auth-token"